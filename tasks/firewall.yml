---
# This should mirror cloud filtering options like Azure NSG
# but may be better for local monitoring
# FIXME! need to call iptables-save to have persistent rules

- name: Allow related and established connections
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT

- name: Allow new incoming SYN packets on TCP port 22 (SSH)
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: '22'
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept new SSH connections.

- name: Allow new incoming web packets (HTTP+HTTPS)
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item | string }}"
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept new web connections.
  with_items:
    - 80
    - 443
    - 8443

- name: Allow RTP
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: '16384:32768'
    jump: ACCEPT
    comment: Accept RTP

- name: Allow FreeSwitch
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: "{{ item | string }}"
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept FreeSwitch connections.
  with_items:
    - 5060
    - 5061
    - 7443

- name: Allow Kurento
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: '8888'
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept Kurento connections.

- name: Allow Turn
  iptables:
    chain: INPUT
    protocol: udp
    destination_port: '3478'
    jump: ACCEPT
    comment: Accept coturn connections.

- name: Allow related and established outbound connections
  iptables:
    chain: OUTPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT

- name: Allow outgoing DNS packets
  iptables:
    chain: OUTPUT
    protocol: "{{ item }}"
    destination_port: '53'
    jump: ACCEPT
    comment: Accept outbound dns connections.
  with_items:
    - tcp
    - udp

- name: Allow outgoing web packets (HTTP+HTTPS) per user
  iptables:
    chain: OUTPUT
    protocol: tcp
    destination_port: "{{ item.1 }}"
    uid_owner: "{{ item.0.uid }}"
    ctstate: NEW
    syn: match
    jump: ACCEPT
    comment: Accept outbound web connections.
  with_subelements:
    - "{{ bbb_user_fw_rules_outbound }}"
    - ports

- name: Allow outgoing udp by freeswitch user
  iptables:
    chain: OUTPUT
    protocol: udp
    uid_owner: '997'
    jump: ACCEPT
    comment: Accept outbound udp by freeswitch user

- name: Allow outgoing tcp by red5 user
  iptables:
    chain: OUTPUT
    protocol: tcp
    uid_owner: '999'
    jump: ACCEPT
    comment: Accept outbound tcp by red5 user

- name: Allow outgoing udp by red5 user
  iptables:
    chain: OUTPUT
    protocol: udp
    uid_owner: '999'
    jump: ACCEPT
    comment: Accept outbound udp by red5 user

# https://medium.com/opsops/custom-chains-in-iptables-with-ansible-753c46eaa664
# https://github.com/ansible/ansible/issues/25099
- name: Get existing iptables rules
  command: iptables -n -L
  changed_when: false
  register: iptables_rules

- name: Create custom iptables chain
  command: iptables -N 'LOG_ACCEPT'
  when: "'Chain LOG_ACCEPT' not in iptables_rules.stdout"

- name: Rule Log and accept 1
  iptables:
    chain: LOG_ACCEPT
    jump: LOG
    comment: Log and accept
    limit: 5/second
    limit_burst: '20'
    log_prefix: "IPTABLES:INFO: "
    log_level: info

- name: Rule Log and accept 2
  iptables:
    chain: LOG_ACCEPT
    jump: ACCEPT
    comment: Log and accept 2

- name: Allow output tcp
  iptables:
    chain: OUTPUT
    protocol: tcp
    ctstate: NEW
    syn: match
    jump: LOG_ACCEPT
    comment: Accept output tcp.

- name: Allow output udp
  iptables:
    chain: OUTPUT
    protocol: udp
    jump: LOG_ACCEPT
    comment: Accept output udp.

- name: Allow input
  iptables:
    chain: INPUT
    protocol: udp
    jump: LOG_ACCEPT
    comment: Accept input.

#- name: Install iptables-persistent
#  package:
#    name: iptables-persistent
#    state: present
